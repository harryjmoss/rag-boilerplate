{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#rag-boilerplate","title":"rag-boilerplate","text":"<p>A boilerplate setup for RAG workflows.</p>"},{"location":"#about","title":"About","text":""},{"location":"#project-team","title":"Project Team","text":"<p>Harry Moss (h.moss@ucl.ac.uk)</p>"},{"location":"#built-with","title":"Built With","text":""},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<p><code>rag-boilerplate</code> requires Python 3.12\u20133.13.</p>"},{"location":"#installation-user","title":"Installation - User","text":"<p>We recommend installing in a project specific virtual environment created using a environment management tool such as Conda. To install the latest development version of <code>rag-boilerplate</code> using <code>pip</code> in the currently active environment run</p> <pre><code>pip install git+https://github.com/harryjmoss/rag-boilerplate.git\n</code></pre> <p>Alternatively create a local clone of the repository with</p> <pre><code>git clone https://github.com/harryjmoss/rag-boilerplate.git\n</code></pre> <p>and then install in editable mode by running</p> <pre><code>pip install -e .\n</code></pre>"},{"location":"#installation-developer","title":"Installation - developer","text":"<p>Create a new virtual environment, for example with <code>uv</code></p> <pre><code>uv venv\nsource .venv/bin/activate\n</code></pre> <p>Install the package itself, development, documentation and test requirements in editable mode</p> <pre><code>uv pip install -e \".[dev,docs,test\"]\n</code></pre> <p>Remember to install pre-commit hooks</p> <pre><code>pre-commit install\n</code></pre> <p>before committing and changes to the code.</p>"},{"location":"#running-locally","title":"Running Locally","text":"<p>How to run the application on your local system.</p>"},{"location":"#running-tests","title":"Running Tests","text":"<p>Tests can be run across all compatible Python versions in isolated environments using <code>tox</code> by running</p> <pre><code>tox\n</code></pre> <p>To run tests manually in a Python environment with <code>pytest</code> installed run</p> <pre><code>pytest tests\n</code></pre> <p>again from the root of the repository.</p>"},{"location":"#building-documentation","title":"Building Documentation","text":"<p>The MkDocs HTML documentation can be built locally by running</p> <pre><code>tox -e docs\n</code></pre> <p>from the root of the repository. The built documentation will be written to <code>site</code>.</p> <p>Alternatively to build and preview the documentation locally, in a Python environment with the optional <code>docs</code> dependencies installed, run</p> <pre><code>mkdocs serve\n</code></pre>"},{"location":"#roadmap","title":"Roadmap","text":"<ul> <li> Initial Research</li> <li> Minimum viable product &lt;-- You are Here</li> <li> Alpha Release</li> <li> Feature-Complete Release</li> </ul>"},{"location":"LICENSE/","title":"License","text":"<p>Copyright (c) 2025, Harry</p> <p>Moss All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <ul> <li> <p>Redistributions of source code must retain the above copyright notice, this   list of conditions and the following disclaimer.</p> </li> <li> <p>Redistributions in binary form must reproduce the above copyright notice, this   list of conditions and the following disclaimer in the documentation and/or   other materials provided with the distribution.</p> </li> <li> <p>Neither the name of rag-boilerplate nor the names of its   contributors may be used to endorse or promote products derived from this   software without specific prior written permission.</p> </li> </ul> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"},{"location":"api/","title":"API reference","text":"<p>rag_boilerplate package.</p>"},{"location":"api/#rag_boilerplate.example_function","title":"<code>example_function(argument, keyword_argument='default')</code>","text":"<p>Concatenate string arguments - an example function docstring.</p> <p>Parameters:</p> Name Type Description Default <code>argument</code> <code>str</code> <p>An argument.</p> required <code>keyword_argument</code> <code>str</code> <p>A keyword argument with a default value.</p> <code>'default'</code> <p>Returns:</p> Type Description <code>str</code> <p>The concatenation of <code>argument</code> and <code>keyword_argument</code>.</p> Source code in <code>src/rag_boilerplate/__init__.py</code> <pre><code>def example_function(argument: str, keyword_argument: str = \"default\") -&gt; str:\n    \"\"\"\n    Concatenate string arguments - an example function docstring.\n\n    Args:\n        argument: An argument.\n        keyword_argument: A keyword argument with a default value.\n\n    Returns:\n        The concatenation of `argument` and `keyword_argument`.\n\n    \"\"\"\n    return argument + keyword_argument\n</code></pre>"}]}